@page "/profile"

@using Blazorise
@using SEIIApp.Shared.DomainDTOs

@inject HttpClient Http
@inject NavigationManager NavigationManager

<center>
    @if (student == null)
    {
        <div class="text-center">
            <h1>Loading</h1>
        </div>
    }

    else if (profile != null && student != null)
    {
        <Container Fluid="true">
            <Alert Color="Color.Primary" Visible="true">
                <TextEdit Placeholder=@("Name: " + profile.Name) ReadOnly="true" class="text-center" />
                <TextEdit Placeholder=@("Description: " + profile.Description) ReadOnly="true" class="text-center" />
            </Alert>
        </Container>

        if (avatar != null)
        {
<Container Fluid="true">
    <div class="avatarContainer">
        <div style=" z-index: 1">
            <img src=@avatar.Location />
        </div>

        @if (equiptItems.Count > 0)
        {
            for (int i = 0; i < equiptItems.Count; i++)
            {
                <div style=" z-index: 3">
                    <img src=@equiptItems[i].Source/>
                </div>
            }

        }
    </div>

</Container>

            @if (allItems != null)
            {
                <Container Fluid="true">
                    <Row>
                        <Column ColumnSize="ColumnSize.Is3" class="text-center">
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2" class="text-center">
                            <Button class="text-center" @onclick="@(() => clickGlass(0) )">
                                <img src="/images/glasses_button.png" width="60" />
                            </Button>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2" class="text-center">
                            <Button class="text-center" @onclick="@(() => clickGlass(1) )">
                                <img src="/images/hat_button.png" width="60" />
                            </Button>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is2" class="text-center">
                            <Button class="text-center" @onclick="@(() => clickGlass(2) )">
                                <img src="/images/mask_button.png" width="60" />
                            </Button>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is3" class="text-center">
                        </Column>
                    </Row>
                </Container>
            }
        }
    }

</center>


@code{
    public int UserId = 1;

    public StudentDto[] students;
    public StudentDto student;
    public StudentProfileDto profile;
    public AvatarDto avatar;
    public AvatarItemDto[] allItems;
    public List<AvatarItemDto> equiptItems;

    public int xp;

    protected override async Task OnInitializedAsync()
    {
        //string uri = $"api/Students/{UserId}";
        student = await Http.GetFromJsonAsync<StudentDto>("api/Students/1");
        allItems = await Http.GetFromJsonAsync<AvatarItemDto[]>("api/AvatarItems");

        profile = student.Profile;

        avatar = student.Avatar;

        equiptItems = avatar.UsedItems;

        xp = student.Profile.Experience;


    }


    async void clickGlass(int id)
    {
        if (equiptItems.Count > 0 && equiptItems.Contains(allItems[id]))
        {
            equiptItems.Remove(allItems[id]);
            avatar.UsedItems = equiptItems;
            //await Http.PutAsJsonAsync<AvatarDto>($"api/Avatars/{student.UserId}", avatar);
        }
        else if (equiptItems.Count > 0 && !equiptItems.Contains(allItems[id]))
        {
            equiptItems.Add(allItems[id]);
            avatar.UsedItems = equiptItems;
            //await Http.PutAsJsonAsync<AvatarDto>($"api/Avatars/{student.UserId}", avatar);
        }

        else if (equiptItems.Count == 0)
        {
            equiptItems.Add(allItems[id]);
            avatar.UsedItems = equiptItems;
            //await Http.PutAsJsonAsync<AvatarDto>($"api/Avatars/{student.UserId}", avatar);
        }

    }

}


<style>
    .avatarContainer {
        width: 300px;
        height: 450px;
        position: relative;
        overflow: visible

    }

        .avatarContainer div {
            width: auto;
            height: auto;
            position: absolute;
            overflow: visible;
            object-fit: cover;
        }
</style>

